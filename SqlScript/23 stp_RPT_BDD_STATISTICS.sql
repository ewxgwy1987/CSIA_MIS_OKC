GO
USE [BHSDB];

go

ALTER PROCEDURE dbo.stp_RPT_OKC_BDDSTATISTICS
		  @DTFROM datetime , 
		  @DTTO datetime
AS
BEGIN
	PRINT 'BAGTAG STORED PROCEDURE BEGIN';
	DECLARE @SECONDRANGE INT=300;

	--SELECT GID.GID AS BAGS_GID, BMAM.TIME_STAMP, BMAM.GID, BMAM.TYPE,
	--	CASE
	--		WHEN BMAM.LOCATION IS NOT NULL THEN BMAM.LOCATION
	--		ELSE (	SELECT TOP 1 LOC.LOCATION_ID
	--				FROM MIS_TC_LINE_DEVICE,LOCATIONS LOC 
	--				WHERE SUBSYSTEM=GIDLOC.SUBSYSTEM 
	--					AND BMA_LOCATION=LOC.LOCATION
	--			 )
	--	END AS LOCATION
	--INTO #BDD_ITEM_MEASURED_TEMP
	--FROM MIS_TC_LINE_DEVICE TLD,LOCATIONS BMALOC,LOCATIONS GIDLOC,GID_USED GID WITH(NOLOCK)
	--LEFT JOIN ITEM_MEASURED BMAM 
	--	ON GID.GID=BMAM.GID
	--	AND BMAM.TIME_STAMP BETWEEN DATEADD(SECOND,-@SECONDRANGE,@DTFROM) AND DATEADD(SECOND,@SECONDRANGE,@DTTO)
	-- WHERE GID.TIME_STAMP BETWEEN @DTFrom AND @DTTo
	--	AND GID.LOCATION=GIDLOC.LOCATION_ID AND TLD.SUBSYSTEM=GIDLOC.SUBSYSTEM
	--	AND TLD.BMA_LOCATION=BMALOC.LOCATION
	--	AND GID.LOCATION<=BMALOC.LOCATION_ID -- GID generate before the BMA

	--1. The quantity of bags is based on the GID generate before BMA
	SELECT	GID.GID,TLD.BMA_LOCATION AS LOCATION
	INTO	#BDD_BAGGID_TEMP
	FROM	GID_USED GID,LOCATIONS GIDLOC,MIS_TC_LINE_DEVICE TLD,LOCATIONS BMALOC WITH(NOLOCK)
	WHERE	GID.TIME_STAMP BETWEEN @DTFrom AND @DTTo
		AND GID.LOCATION=GIDLOC.LOCATION_ID AND TLD.SUBSYSTEM=GIDLOC.SUBSYSTEM
		AND TLD.BMA_LOCATION=BMALOC.LOCATION
		AND GID.LOCATION<=BMALOC.LOCATION_ID -- GID generate before the BMA


	--2. DELETE THE BAG GID WHICH IS LOST before the BMA
	DELETE 
	FROM #BDD_BAGGID_TEMP
	WHERE GID IN (	SELECT GID 
					FROM MIS_TC_LINE_DEVICE TLD,LOCATIONS BMALOC,ITEM_LOST ITL, LOCATIONS ITLLOC WITH(NOLOCK)
					WHERE ITL.TIME_STAMP BETWEEN DATEADD(SECOND,-@SECONDRANGE,@DTFROM) AND DATEADD(SECOND,@SECONDRANGE,@DTTO)
						AND ITL.LOCATION=ITLLOC.LOCATION_ID AND TLD.SUBSYSTEM=ITLLOC.SUBSYSTEM
						AND TLD.BMA_LOCATION=BMALOC.LOCATION
						AND ITL.LOCATION<=BMALOC.LOCATION_ID -- GID generate before the BMA
				)

	--3. The bags which is measured by BMA
	SELECT BMAM.GID, BMAM.TIME_STAMP,LOC.LOCATION, BMAM.TYPE
	INTO #BDD_ITEM_MEASURED_TEMP
	FROM ITEM_MEASURED BMAM, LOCATIONS LOC
	WHERE BMAM.LOCATION=LOC.LOCATION_ID
	AND BMAM.TIME_STAMP BETWEEN DATEADD(SECOND,-@SECONDRANGE,@DTFROM) AND DATEADD(SECOND,@SECONDRANGE,@DTTO)


	--4. The count of bags which passed through BMA with GID
	SELECT	BAGGID.LOCATION, 
			COUNT(BAGGID.GID) AS 'TOTAL',
			0 AS 'DIM_TOTAL',
			0 AS 'OUT',
			0 AS 'NORMAL',
			0 AS 'NOT_DIM'
	INTO #BDD_DIMSTATISTICS_TEMP
	FROM	#BDD_BAGGID_TEMP BAGGID
	GROUP BY BAGGID.LOCATION

	--SELECT * FROM #BDD_DIMSTATISTICS_TEMP;

	--5. The count of Bags DIMENSIONED
	UPDATE BDD
	SET BDD.DIM_TOTAL=BMA_DIM.DIM
	FROM(
			SELECT BMAM.LOCATION,COUNT(BMAM.GID) AS DIM
			FROM #BDD_ITEM_MEASURED_TEMP BMAM
			GROUP BY BMAM.LOCATION
		) BMA_DIM, #BDD_DIMSTATISTICS_TEMP BDD
	WHERE BDD.LOCATION=BMA_DIM.LOCATION

	
	--SELECT * FROM #BDD_DIMSTATISTICS_TEMP;

	--6. The count of bags which are OOG
	UPDATE BDD
	SET BDD.OUT=BMA_OOG.OOG
	FROM(
			SELECT BMAM.LOCATION,COUNT(BMAM.GID) AS OOG
			FROM #BDD_ITEM_MEASURED_TEMP BMAM
			WHERE BMAM.TYPE='1'--OOG
			GROUP BY BMAM.LOCATION
		) BMA_OOG, #BDD_DIMSTATISTICS_TEMP BDD
	WHERE BDD.LOCATION=BMA_OOG.LOCATION

	--7. The count of bags which are NORMAL
	UPDATE BDD
	SET BDD.NORMAL=BMA_NOR.NORMAL
	FROM(
			SELECT BMAM.LOCATION,COUNT(BMAM.GID) AS NORMAL
			FROM #BDD_ITEM_MEASURED_TEMP BMAM
			WHERE BMAM.TYPE='2'--NORMAL
			GROUP BY BMAM.LOCATION
		) BMA_NOR, #BDD_DIMSTATISTICS_TEMP BDD
	WHERE BDD.LOCATION=BMA_NOR.LOCATION

	--8. Update the count of bags which are not dimensioned
	UPDATE BDT
	SET BDT.NOT_DIM=TOTAL-DIM_TOTAL
	FROM #BDD_DIMSTATISTICS_TEMP BDT;

	SELECT * FROM #BDD_DIMSTATISTICS_TEMP;
END

--DECLARE @DTFrom datetime='2013-12-18';
--DECLARE @DTTo datetime='2013-12-27';
--EXEC stp_RPT_OKC_BDDSTATISTICS @DTFROM,@DTTO;