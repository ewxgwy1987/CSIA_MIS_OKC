GO
USE [BHSDB];

go

ALTER PROCEDURE dbo.stp_RPT24_BDDSTATISTICS_OOG_GWYTEST
		  @DTFROM datetime , 
		  @DTTO datetime
AS
BEGIN
	PRINT 'BAGTAG STORED PROCEDURE BEGIN';
	DECLARE @SECONDRANGE INT=300;

	SELECT GID.GID AS BAGS_GID, BMAM.TIME_STAMP, BMAM.GID, BMAM.TYPE,
		CASE
			WHEN BMAM.LOCATION IS NOT NULL THEN BMAM.LOCATION
			ELSE (	SELECT TOP 1 LOC.LOCATION_ID
					FROM MIS_SS_LINE_DEVICE,LOCATIONS LOC 
					WHERE GID_LOCATION=GIDLOC.LOCATION 
						AND BMA_LOCATION=LOC.LOCATION
				 )
		END AS LOCATION
	INTO #BDD_ITEM_MEASURED_TEMP
	FROM LOCATIONS GIDLOC, GID_USED GID WITH(NOLOCK)
	LEFT JOIN ITEM_MEASURED BMAM 
		ON GID.GID=BMAM.GID
		AND BMAM.TIME_STAMP BETWEEN DATEADD(SECOND,-@SECONDRANGE,@DTFROM) AND DATEADD(SECOND,@SECONDRANGE,@DTTO)
	 WHERE GID.TIME_STAMP BETWEEN @DTFrom AND @DTTo
		AND GID.LOCATION=GIDLOC.LOCATION_ID
		AND GIDLOC.LOCATION LIKE 'SS%'
		--AND EXISTS(SELECT GID_LOCATION FROM MIS_SS_LINE_DEVICE WHERE GIDLOC.LOCATION=GID_LOCATION)

	--DELETE THE BAG GID WHICH IS LOST
	DELETE 
	FROM #BDD_ITEM_MEASURED_TEMP
	WHERE BAGS_GID IN (	SELECT GID 
						FROM ITEM_LOST ITI, LOCATIONS LOC WITH(NOLOCK)
						WHERE ITI.TIME_STAMP BETWEEN DATEADD(SECOND,-@SECONDRANGE,@DTFROM) AND DATEADD(SECOND,@SECONDRANGE,@DTTO)
							AND ITI.LOCATION=LOC.LOCATION_ID
							AND LOC.LOCATION IN (SELECT BMA_LOCATION FROM MIS_SS_LINE_DEVICE)
						)

	--1. The count of bags which passed through BMA with GID
	SELECT	BMA_LOC.LOCATION, 
			COUNT(BMAM.BAGS_GID) AS 'TOTAL',
			0 AS 'DIM_TOTAL',
			0 AS 'OUT',
			0 AS 'NORMAL',
			0 AS 'NOT_DIM'
	INTO #BDD_DIMSTATISTICS_TEMP
	FROM	#BDD_ITEM_MEASURED_TEMP BMAM,
			LOCATIONS BMA_LOC
	WHERE 	BMAM.LOCATION=BMA_LOC.LOCATION_ID
	GROUP BY BMA_LOC.LOCATION

	--SELECT * FROM #BDD_DIMSTATISTICS_TEMP;

	--2. The count of bags which are dimensioned
	--UPDATE BDD
	--SET BDD.TOTAL=BMA_GID.TOTAL
	--FROM(
	--		SELECT MAP.BMA_LOCATION, COUNT(GID.GID) AS TOTAL
	--		FROM  GID_USED GID, LOCATIONS LOC, MIS_SS_LINE_DEVICE MAP WITH(NOLOCK)
	--		WHERE GID.TIME_STAMP BETWEEN DATEADD(SECOND,-@SECONDRANGE,@DTFROM) AND DATEADD(SECOND,-@SECONDRANGE,@DTTO)
	--			AND GID.LOCATION=LOC.LOCATION_ID
	--			AND LOC.LOCATION=MAP.GID_LOCATION
	--		GROUP BY MAP.BMA_LOCATION
	--	) AS BMA_GID, #BDD_DIMSTATISTICS_TEMP BDD
	--WHERE BDD.LOCATION=BMA_GID.BMA_LOCATION;

	UPDATE BDD
	SET BDD.DIM_TOTAL=BMA_DIM.DIM
	FROM(
			SELECT LOC.LOCATION,COUNT(BMAM.GID) AS DIM
			FROM #BDD_ITEM_MEASURED_TEMP BMAM,LOCATIONS LOC
			WHERE BMAM.LOCATION=LOC.LOCATION_ID
				AND BMAM.GID IS NOT NULL
			GROUP BY LOC.LOCATION
		) BMA_DIM, #BDD_DIMSTATISTICS_TEMP BDD
	WHERE BDD.LOCATION=BMA_DIM.LOCATION

	
	--SELECT * FROM #BDD_DIMSTATISTICS_TEMP;

	--3. The count of bags which are OOG
	UPDATE BDD
	SET BDD.OUT=BMA_OOG.OOG
	FROM(
			SELECT LOC.LOCATION,COUNT(BMAM.GID) AS OOG
			FROM #BDD_ITEM_MEASURED_TEMP BMAM,LOCATIONS LOC
			WHERE BMAM.LOCATION=LOC.LOCATION_ID
				AND BMAM.TYPE='1'--OOG
			GROUP BY LOC.LOCATION
		) BMA_OOG, #BDD_DIMSTATISTICS_TEMP BDD
	WHERE BDD.LOCATION=BMA_OOG.LOCATION

	--4. The count of bags which are NORMAL
	UPDATE BDD
	SET BDD.NORMAL=BMA_NOR.NORMAL
	FROM(
			SELECT LOC.LOCATION,COUNT(BMAM.GID) AS NORMAL
			FROM #BDD_ITEM_MEASURED_TEMP BMAM,LOCATIONS LOC
			WHERE BMAM.LOCATION=LOC.LOCATION_ID
				AND BMAM.TYPE='2'--NORMAL
			GROUP BY LOC.LOCATION
		) BMA_NOR, #BDD_DIMSTATISTICS_TEMP BDD
	WHERE BDD.LOCATION=BMA_NOR.LOCATION

	--5. Update the count of bags which are not dimensioned
	UPDATE BDT
	SET BDT.NOT_DIM=TOTAL-DIM_TOTAL
	FROM #BDD_DIMSTATISTICS_TEMP BDT;

	SELECT * FROM #BDD_DIMSTATISTICS_TEMP;
END

--DECLARE @DTFrom datetime='2013-12-18';
--DECLARE @DTTo datetime='2013-12-27';
--EXEC stp_RPT24_BDDSTATISTICS_OOG_GWYTEST @DTFROM,@DTTO;