GO
USE [BHSDB];
GO

ALTER PROCEDURE dbo.stp_RPT_OKC_TRACKEDPHOTOCELL
		@DTFrom [datetime],
		@DTTo [datetime],
		@SubSystem varchar(MAX)
AS
BEGIN
	SELECT SUBSYSTEM, PhotoCellID,INTERNAL_LOC, TOTAL, TYPE 
	INTO #PTK_PECTRACKING_TEMP
	FROM
	(
		--BAGS SEEN
		SELECT MBCR.SUBSYSTEM, MBCR.LOCATION AS PhotoCellID, LOC.INTERNAL_LOC, SUM(DIFFERENT) AS TOTAL, 'TOTAL_BAG' AS TYPE
		FROM MDS_BAG_COUNT MBC, MDS_BAG_COUNTERS MBCR, LOCATIONS LOC WITH(NOLOCK)
		WHERE MBC.COUNTER_ID=MBCR.COUNTER_ID
			AND MBCR.LOCATION=LOC.LOCATION AND MBCR.SUBSYSTEM=LOC.SUBSYSTEM AND LOC.TRACKED=1 
			--AND EXISTS (SELECT LOCATION FROM LOCATIONS WHERE TRACKED = 1 AND MBCR.LOCATION=LOCATIONS.LOCATION)
			AND MBCR.SUBSYSTEM IN (SELECT * FROM RPT_GETPARAMETERS(@SubSystem))
			AND TIME_STAMP BETWEEN @DTFrom AND @DTTo 
		GROUP BY MBCR.SUBSYSTEM,MBCR.LOCATION,LOC.INTERNAL_LOC

		-- MISS BAG JAM
		UNION
		SELECT ALM_ALMAREA1 AS SUBSYSTEM, ALM_ALMEXTFLD2 AS PhotoCellID,LOC.INTERNAL_LOC,COUNT(ALM_ALMEXTFLD2) AS TOTAL, 'MSBJ' AS TYPE
		FROM MDS_ALARMS MALR, LOCATIONS LOC WITH(NOLOCK)
		WHERE (ALM_STARTTIME BETWEEN @DTFrom AND @DTTo) AND (ALM_UNCERTAIN = 0) 
			AND ALM_ALMAREA1 IN (SELECT * FROM  RPT_GETPARAMETERS(@SubSystem)) 
			AND ALM_ALMAREA2 = 'AA_MSBJ'
			AND MALR.ALM_ALMEXTFLD2=LOC.LOCATION AND LOC.TRACKED=1 
			--AND EXISTS (SELECT LOCATION FROM LOCATIONS WHERE TRACKED = 1 AND ALM_ALMEXTFLD2=LOCATIONS.LOCATION) 
		GROUP BY ALM_ALMAREA1, ALM_ALMEXTFLD2,LOC.INTERNAL_LOC

		-- HARD BAG JAM
		UNION
		SELECT ALM_ALMAREA1 AS SUBSYSTEM, ALM_ALMEXTFLD2 AS PhotoCellID,LOC.INTERNAL_LOC, COUNT(ALM_ALMEXTFLD2) AS TOTAL, 'BJAM' AS TYPE
		FROM MDS_ALARMS MALR, LOCATIONS LOC WITH(NOLOCK)
		WHERE (ALM_STARTTIME BETWEEN @DTFrom AND @DTTo) AND (ALM_UNCERTAIN = 0) 
			AND ALM_ALMAREA1 IN (SELECT * FROM  RPT_GETPARAMETERS(@SubSystem)) 
			AND ALM_ALMAREA2 = 'AA_BJAM'
			AND MALR.ALM_ALMEXTFLD2=LOC.LOCATION AND LOC.TRACKED=1 
			--AND EXISTS (SELECT LOCATION FROM LOCATIONS WHERE TRACKED = 1 AND ALM_ALMEXTFLD2=LOCATIONS.LOCATION) 	
		GROUP BY ALM_ALMAREA1, ALM_ALMEXTFLD2 ,LOC.INTERNAL_LOC

		-- MISSING BAGS
		UNION	
		SELECT LOC.SUBSYSTEM, LOC.LOCATION AS PhotoCellID,LOC.INTERNAL_LOC, COUNT(ITL.GID) AS TOTAL, 'MISS' AS TYPE
		FROM ITEM_LOST ITL, LOCATIONS LOC WITH(NOLOCK)
		WHERE TIME_STAMP BETWEEN @DTFrom AND @DTTo 
			AND ITL.LOCATION=LOC.LOCATION_ID
			AND LOC.SUBSYSTEM IN (SELECT * FROM  RPT_GETPARAMETERS(@SubSystem))
			--AND ITL.LOCATION IN (SELECT LOCATION_ID FROM LOCATIONS WHERE TRACKED = 1)
		GROUP BY LOC.SUBSYSTEM, LOC.LOCATION,LOC.INTERNAL_LOC
		

		-- UNKNOWN BAGS
		UNION
		SELECT LOC.SUBSYSTEM, LOC.LOCATION AS PhotoCellID,LOC.INTERNAL_LOC, COUNT(GID.GID) AS TOTAL, 'BHS UNKNOWN' AS TYPE
		FROM GID_USED GID, LOCATIONS LOC WITH(NOLOCK)
		WHERE TIME_STAMP BETWEEN @DTFrom AND @DTTo 
			AND GID.LOCATION=LOC.LOCATION_ID
			AND SUBSYSTEM IN (SELECT * FROM  RPT_GETPARAMETERS(@SubSystem)) 
			AND GID.BAG_TYPE = '02' 
			--AND GID.LOCATION IN (SELECT LOCATION_ID FROM LOCATIONS WHERE TRACKED = 1)
		GROUP BY LOC.SUBSYSTEM, LOC.LOCATION,LOC.INTERNAL_LOC
		
	) 
	AS TEMP_TBL
	
	CREATE TABLE #PTK_PECTRACKING_FINAL
	(
		SUBSYSTEM VARCHAR(20),
		PhotoCellID VARCHAR(20),
		INTERNAL_LOC VARCHAR(20),
		TOTAL_BAG INT,
		MISS INT,
		UNKNOWN INT,
		BJAM INT,
		MSBJ INT,
		--PEC_INDEX VARCHAR(10)
	);
	
	-- USE INTERNAL_LOC as a hidden columen to sort the result
	--INSERT INTO #PTK_PECTRACKING_FINAL
	--SELECT DISTINCT SUBSYSTEM, PhotoCellID, 0 AS TOTAL_BAG, 0 AS MISS, 0 AS UNKNOWN, 0 AS BJAM, 0 AS MSBJ,
	--	CASE 
	--		WHEN LEN(SUBSTRING(PhotoCellID,CHARINDEX('-',PhotoCellID)+1,LEN(PhotoCellID))) > 1
	--			THEN SUBSTRING(PhotoCellID,CHARINDEX('-',PhotoCellID)+1,LEN(PhotoCellID))
	--		ELSE
	--			'0' + SUBSTRING(PhotoCellID,CHARINDEX('-',PhotoCellID)+1,LEN(PhotoCellID))
	--	END AS PEC_INDEX
	--FROM #PTK_PECTRACKING_TEMP

	INSERT INTO #PTK_PECTRACKING_FINAL
	SELECT DISTINCT SUBSYSTEM, PhotoCellID,INTERNAL_LOC,0 AS TOTAL_BAG, 0 AS MISS, 0 AS UNKNOWN, 0 AS BJAM, 0 AS MSBJ
	FROM #PTK_PECTRACKING_TEMP
			
	UPDATE PPF
	SET PPF.TOTAL_BAG=PPT.TOTAL
	FROM #PTK_PECTRACKING_TEMP PPT,#PTK_PECTRACKING_FINAL PPF
	WHERE PPF.SUBSYSTEM=PPT.SUBSYSTEM 
		AND PPF.PhotoCellID=PPT.PhotoCellID
		AND PPT.TYPE='TOTAL_BAG';
		
	UPDATE PPF
	SET PPF.MISS=PPT.TOTAL
	FROM #PTK_PECTRACKING_TEMP PPT,#PTK_PECTRACKING_FINAL PPF
	WHERE PPF.SUBSYSTEM=PPT.SUBSYSTEM 
		AND PPF.PhotoCellID=PPT.PhotoCellID
		AND PPT.TYPE='MISS';
		
	UPDATE PPF
	SET PPF.UNKNOWN=PPT.TOTAL
	FROM #PTK_PECTRACKING_TEMP PPT,#PTK_PECTRACKING_FINAL PPF
	WHERE PPF.SUBSYSTEM=PPT.SUBSYSTEM 
		AND PPF.PhotoCellID=PPT.PhotoCellID
		AND PPT.TYPE='BHS UNKNOWN';
		
	UPDATE PPF
	SET PPF.BJAM=PPT.TOTAL
	FROM #PTK_PECTRACKING_TEMP PPT,#PTK_PECTRACKING_FINAL PPF
	WHERE PPF.SUBSYSTEM=PPT.SUBSYSTEM 
		AND PPF.PhotoCellID=PPT.PhotoCellID
		AND PPT.TYPE='BJAM';
	
	UPDATE PPF
	SET PPF.MSBJ=PPT.TOTAL
	FROM #PTK_PECTRACKING_TEMP PPT,#PTK_PECTRACKING_FINAL PPF
	WHERE PPF.SUBSYSTEM=PPT.SUBSYSTEM 
		AND PPF.PhotoCellID=PPT.PhotoCellID
		AND PPT.TYPE='MSBJ';
	
	SELECT * FROM #PTK_PECTRACKING_FINAL
	ORDER BY SUBSYSTEM,INTERNAL_LOC;
END


--DECLARE @DTFrom datetime='2013-11-01';
--DECLARE @DTTo datetime='2013-12-25';
--DECLARE @Subsystem varchar(max)='ED1,ED2,ED3,ED4,SS1,SS2';
--EXEC stp_RPT23_TRACKEDPHOTOCELL @DTFrom,@DTTo,@Subsystem;