GO
USE [BHSDB_OKC];
GO


ALTER PROCEDURE dbo.stp_RPT_OKC_EquipOperation_HSPD
		@DTFrom DATETIME,
		@DTTo DATETIME,
		@SubSystem varchar(MAX)
AS
BEGIN

	CREATE TABLE #TMP_HSPD_OPERATION
	(
		HSPD_LOCATION VARCHAR(20),
		CYCLES_COUNT INT,
		JAMS_COUNT INT,
		FAILPOSITION_COUNT INT,
		ESTOP_COUNT INT
	)
	--0. PREPARE MDS_ALARMS
	SELECT * 
	INTO	#TMP_MDS_ALARMS
	FROM	MDS_ALARMS WITH(NOLOCK)
	WHERE	ALM_STARTTIME BETWEEN @DTFrom AND @DTTo 
		AND ALM_ALMAREA2 IN ('AA_BJAM','AA_MSBJ','AA_REFL','AA_EXFL','AA_ESTP')

	--1. INSERT HSPD LOCATION AND CYCLES COUNT
	INSERT INTO #TMP_HSPD_OPERATION
	SELECT	HSPD.HSPD_MOTOR,SUM(DIFFERENT) AS CYCLES_COUNT, 0 AS JAMS_COUNT, 0 AS FAILPOSITION_COUNT, 0 AS ESTOP_COUNT
	FROM	MIS_HSPD_DEVICE HSPD, MDS_COUNT MC, MDS_COUNTERS MCR WITH(NOLOCK)
	WHERE	MC.COUNTER_ID=MCR.COUNTER_ID
			AND MCR.TYPE='HSD'
			AND LTRIM(RTRIM(MCR.TYPE_STATUS)) = 'RETRACT'
			AND HSPD.SUBSYSTEM=MCR.SUBSYSTEM
			AND MCR.SUBSYSTEM IN (SELECT * FROM RPT_GETPARAMETERS(@SubSystem))
			AND HSPD.BELT_LOCATION=MCR.LOCATION
			AND MC.TIME_STAMP BETWEEN @DTFrom AND @DTTo 
	GROUP BY HSPD.HSPD_MOTOR
	
	--2. UPDATE JAMS COUNT
	--2.1 CALCULATE JAMS COUNT GROUP BY HSPD LOCATION
	SELECT	HJAMS.HSPD_MOTOR, COUNT(HJAMS.ALM_STARTTIME) AS JAMS_COUNT
	INTO #TMP_HSPD_JAMS
	FROM (
			SELECT	HSPD.HSPD_MOTOR, ALM.ALM_STARTTIME, ALM.ALM_ALMEXTFLD2
			FROM	#TMP_MDS_ALARMS ALM, MIS_HSPD_DEVICE HSPD
			WHERE	ALM.ALM_STARTTIME BETWEEN @DTFrom AND @DTTo 
				AND	ALM.ALM_ALMAREA1=HSPD.SUBSYSTEM 
				AND ALM.ALM_ALMEXTFLD2=HSPD.RETRACT_CONVEYOR
				AND (ALM.ALM_ALMAREA2='AA_BJAM' OR ALM.ALM_ALMAREA2='AA_MSBJ')
			UNION
			SELECT	HSPD.HSPD_MOTOR, ALM.ALM_STARTTIME, ALM.ALM_ALMEXTFLD2
			FROM	#TMP_MDS_ALARMS ALM, MIS_HSPD_DEVICE HSPD
			WHERE	ALM.ALM_STARTTIME BETWEEN @DTFrom AND @DTTo 
				AND	ALM.ALM_ALMAREA1=HSPD.SUBSYSTEM 
				AND ALM.ALM_ALMEXTFLD2=HSPD.EXTEND_CONVEYOR
				AND (ALM.ALM_ALMAREA2='AA_BJAM' OR ALM.ALM_ALMAREA2='AA_MSBJ')
		 ) AS HJAMS
	GROUP BY HJAMS.HSPD_MOTOR

	--2.2 UPDATE JAMS COUNT FOR EACH HSPD
	UPDATE #TMP_HSPD_OPERATION
	SET JAMS_COUNT=HJAM.JAMS_COUNT
	FROM #TMP_HSPD_OPERATION THO, #TMP_HSPD_JAMS HJAM
	WHERE THO.HSPD_LOCATION=HJAM.HSPD_MOTOR

	--3. UPDATE FAILED POSITION COUNT
	UPDATE	#TMP_HSPD_OPERATION
	SET		FAILPOSITION_COUNT=FLPS.FLPS_COUNT
	FROM	#TMP_HSPD_OPERATION THO, 
			(
				SELECT	HSPD.HSPD_MOTOR, COUNT(ALM.ALM_STARTTIME) AS FLPS_COUNT
				FROM	#TMP_MDS_ALARMS ALM, MIS_HSPD_DEVICE HSPD
				WHERE	ALM.ALM_STARTTIME BETWEEN @DTFrom AND @DTTo 
					AND	ALM.ALM_ALMAREA1=HSPD.SUBSYSTEM 
					AND ALM.ALM_ALMEXTFLD2=HSPD.HSPD_MOTOR
					AND (ALM.ALM_ALMAREA2='AA_REFL' OR ALM.ALM_ALMAREA2='AA_EXFL')
				GROUP BY HSPD.HSPD_MOTOR
			) AS FLPS
	WHERE	THO.HSPD_LOCATION=FLPS.HSPD_MOTOR

	--4. UPDATE E-STOP COUNT
	UPDATE	#TMP_HSPD_OPERATION
	SET		ESTOP_COUNT=FLPS.ES_COUNT
	FROM	#TMP_HSPD_OPERATION THO, 
			(
				SELECT	HSPD.HSPD_MOTOR, COUNT(ALM.ALM_STARTTIME) AS ES_COUNT
				FROM	#TMP_MDS_ALARMS ALM, MIS_HSPD_DEVICE HSPD
				WHERE	ALM.ALM_STARTTIME BETWEEN @DTFrom AND @DTTo 
					AND	ALM.ALM_ALMAREA1=HSPD.SUBSYSTEM 
					AND ALM.ALM_ALMEXTFLD2 IN (SELECT PAR FROM RPT_GETPARAMETERS(ESTOP_LOCATIONS))
					AND ALM.ALM_ALMAREA2='AA_ESTP'
				GROUP BY HSPD.HSPD_MOTOR
			) AS FLPS
	WHERE	THO.HSPD_LOCATION=FLPS.HSPD_MOTOR

	SELECT * FROM #TMP_HSPD_OPERATION;
	
END

--DECLARE @DTFrom datetime='2014-04-20';
--DECLARE @DTTo datetime='2014-04-28';
--DECLARE @Subsystem varchar(max)='ED1,ED2,ED3,ED4,SS1,SS2';
--EXEC stp_RPT_OKC_EquipOperation_HSPD @DTFrom,@DTTo,@Subsystem;