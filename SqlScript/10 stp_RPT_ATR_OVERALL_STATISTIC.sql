GO
USE [BHSDB];
GO


create PROCEDURE dbo.stp_RPT_OKC_ATR_OVERALL_STATISTIC
		  @DTFROM datetime , 
		  @DTTO datetime, 
		  @ATRUNITS varchar(MAX)
AS
BEGIN
	PRINT 'BAGTAG STORED PROCEDURE BEGIN';
	DECLARE @DATERANGE INT=1;

	--1. Prepare ITEM_SCANNED detail data
	SELECT	ISC.*,LOC.LOCATION AS ATRUNIT, 0 AS LATE_MARK 
	INTO	#ATR_ATRDETAIL_TEMP
	FROM	ITEM_SCANNED ISC, 
			LOCATIONS LOC WITH(NOLOCK)
	WHERE ISC.TIME_STAMP BETWEEN @DTFROM AND @DTTO
		AND ISC.LOCATION=LOC.LOCATION_ID 
		AND LOC.LOCATION IN (SELECT * FROM dbo.RPT_GETPARAMETERS(@ATRUNITS));

	CREATE TABLE #ATR_STATISTIC_TEMP
	(
		ATRUNIT VARCHAR(20),
		COUNT_BAGSSEEN INT,
		COUNT_BAGSREAD INT,
		COUNT_NOREAD INT,
		COUNT_VALIDTAGS INT,
		COUNT_CONFLICT_TAGS INT,
		COUNT_NOBSM INT,
		COUNT_LATEBAGS INT,
		READ_RATE FLOAT
	);

	INSERT INTO #ATR_STATISTIC_TEMP 
	SELECT DISTINCT AAT.ATRUNIT, 0, 0, 0, 0, 0, 0, 0, 0
	FROM #ATR_ATRDETAIL_TEMP AAT

	--1. BAGS SEEN
	UPDATE AST
	SET AST.COUNT_BAGSSEEN=AAT.CNT_BAGSEEN
	FROM (
			SELECT AAT.ATRUNIT, COUNT(AAT.GID) AS CNT_BAGSEEN
			FROM #ATR_ATRDETAIL_TEMP AAT
			GROUP BY AAT.ATRUNIT
		 ) AS AAT, #ATR_STATISTIC_TEMP AST
	WHERE AAT.ATRUNIT=AST.ATRUNIT;

	--2. BAGS READ
	UPDATE AST
	SET AST.COUNT_BAGSREAD=AAT.CNT_BAGREAD
	FROM (
			SELECT AAT.ATRUNIT, COUNT(GID) AS CNT_BAGREAD
			FROM #ATR_ATRDETAIL_TEMP AAT
			WHERE (AAT.STATUS_TYPE='1'	--Read ok. Single Tag
				OR AAT.STATUS_TYPE='3'	--Read ok. Multiple tags with different Tag Type
				OR AAT.STATUS_TYPE='7'	--Read ok. Multiple tags with same Tag Type
				OR AAT.STATUS_TYPE='8')	--Read ok. Multiple tags with more than 3 tag
			GROUP BY AAT.ATRUNIT
		 ) AS AAT, #ATR_STATISTIC_TEMP AST
	WHERE AAT.ATRUNIT=AST.ATRUNIT;

	--3. NO READS
	UPDATE #ATR_STATISTIC_TEMP
	SET COUNT_NOREAD=COUNT_BAGSSEEN-COUNT_BAGSREAD;

	--4. VALID TAGS
	SELECT AAT.ATRUNIT,
		CASE AAT.STATUS_TYPE
			WHEN '1' THEN 1 --Read ok. Single Tag
			WHEN '3' THEN 2 --Read ok. Multiple tags with different Tag Type
			ELSE 0
		END AS NUM_VALIDTAGS
	INTO #ATR_NUM_VALIDTAGS
	FROM #ATR_ATRDETAIL_TEMP AAT;

	UPDATE AST
	SET AST.COUNT_VALIDTAGS=AAT.CNT_VALIDTAGS
	FROM (
			SELECT ANV.ATRUNIT,SUM(ANV.NUM_VALIDTAGS) AS CNT_VALIDTAGS
			FROM #ATR_NUM_VALIDTAGS ANV
			GROUP BY ANV.ATRUNIT
		  )AS AAT, #ATR_STATISTIC_TEMP AST
	WHERE AAT.ATRUNIT=AST.ATRUNIT;

	--5. CONFLICT TAGS
	UPDATE AST
	SET AST.COUNT_CONFLICT_TAGS=AAT.CNT_CONFLICTTAGS
	FROM (
			SELECT AAT.ATRUNIT,COUNT(GID)*2 AS CNT_CONFLICTTAGS
			FROM #ATR_ATRDETAIL_TEMP AAT
			WHERE AAT.STATUS_TYPE='7'
			GROUP BY AAT.ATRUNIT
		 ) AS AAT, #ATR_STATISTIC_TEMP AST
	WHERE AAT.ATRUNIT=AST.ATRUNIT;

	--6. NO MATCHING BSM
	SELECT DISTINCT LICENSE_PLATE,AIRLINE,FLIGHT_NUMBER,SDO INTO #ATR_BAG_SORTING_TEMP
	FROM 
	(
		SELECT LICENSE_PLATE,AIRLINE,FLIGHT_NUMBER,SDO
		FROM BAG_SORTING WITH(NOLOCK)
		WHERE TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@DTFROM) AND DATEADD(DAY,@DATERANGE,@DTTO)
			
		UNION ALL
		SELECT LICENSE_PLATE,AIRLINE,FLIGHT_NUMBER,SDO
		FROM BAG_SORTING_HIS WITH(NOLOCK)
		WHERE TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@DTFROM) AND DATEADD(DAY,@DATERANGE,@DTTO)
	) AS BAG_SORTING_ALL ;

	UPDATE AST
	SET AST.COUNT_NOBSM=AAT.CNT_NOBSM
	FROM (
			SELECT AAT1.ATRUNIT,COUNT(GID) AS CNT_NOBSM
			FROM #ATR_ATRDETAIL_TEMP AAT1
			WHERE NOT EXISTS (SELECT * FROM #ATR_BAG_SORTING_TEMP ABSG WHERE AAT1.LICENSE_PLATE1=ABSG.LICENSE_PLATE)
				AND NOT EXISTS (SELECT * FROM #ATR_BAG_SORTING_TEMP ABSG WHERE AAT1.LICENSE_PLATE2=ABSG.LICENSE_PLATE)
			GROUP BY AAT1.ATRUNIT
		 ) AS AAT, #ATR_STATISTIC_TEMP AST
	WHERE AAT.ATRUNIT=AST.ATRUNIT;

	--7. READ RATE
	UPDATE AST
	SET AST.READ_RATE=CAST(AST.COUNT_BAGSREAD AS FLOAT)/CAST(AST.COUNT_BAGSSEEN AS FLOAT)*100
	FROM #ATR_STATISTIC_TEMP AST

	--UPDATE AST
	--SET AST.READ_RATE=ARR.READRATE
	--FROM (
	--		SELECT AST.ATRUNIT,CAST(COUNT(ANV.NUM_VALIDTAGS) AS FLOAT)/CAST(AST.COUNT_BAGSSEEN AS FLOAT) AS READRATE
	--		FROM #ATR_STATISTIC_TEMP AST, #ATR_NUM_VALIDTAGS ANV
	--		WHERE AST.ATRUNIT=ANV.ATRUNIT
	--	 ) AS ARR,#ATR_STATISTIC_TEMP AST
	--WHERE ARR.ATRUNIT=AST.ATRUNIT;

	

	--8 Mark the bag which is late(ISC timestamp is after close time)
	UPDATE AAT
	SET AAT.LATE_MARK=1
	FROM #ATR_ATRDETAIL_TEMP AAT, #ATR_BAG_SORTING_TEMP BS, FLIGHT_PLAN_ALLOC FPA WITH(NOLOCK)
	WHERE (AAT.LICENSE_PLATE1=BS.LICENSE_PLATE OR AAT.LICENSE_PLATE2=BS.LICENSE_PLATE)
		AND BS.AIRLINE=FPA.AIRLINE AND BS.FLIGHT_NUMBER=FPA.FLIGHT_NUMBER AND BS.SDO=FPA.SDO
		AND AAT.TIME_STAMP >=
				(	CASE FPA.ALLOC_CLOSE_RELATED
						WHEN 'ETD' 
							THEN CONVERT(DATETIME,CONVERT(VARCHAR,FPA.EDO,103) + ' ' + DBO.RPT_GETFORMATTEDSTO(dbo.SAC_OFFSETOPERATOR(FPA.ETO,FPA.ALLOC_CLOSE_OFFSET)),103)
						ELSE 
							CONVERT(DATETIME,CONVERT(VARCHAR,FPA.SDO,103) + ' ' + DBO.RPT_GETFORMATTEDSTO(dbo.SAC_OFFSETOPERATOR(FPA.STO,FPA.ALLOC_CLOSE_OFFSET)),103)
					END
				)--CLOASE TIME
		AND AAT.ATRUNIT='ML1-1'

	--9 Count the number of late bags 
	UPDATE AST
	SET AST.COUNT_LATEBAGS=ALB.CNT_LATEBAGS
	FROM (
			SELECT AAT.ATRUNIT,COUNT(GID) AS CNT_LATEBAGS
			FROM #ATR_ATRDETAIL_TEMP AAT
			WHERE AAT.LATE_MARK=1
			GROUP BY AAT.ATRUNIT
		 ) AS ALB, #ATR_STATISTIC_TEMP AST
	WHERE ALB.ATRUNIT=AST.ATRUNIT;


	select * from #ATR_STATISTIC_TEMP;
END

--DECLARE @DTFROM datetime='2014/1/3 17:43:03'; 
--DECLARE @DTTO datetime='2014/1/3 18:30:04';
--DECLARE @ATRUNIT varchar(MAX)='ML1-2';
--EXEC stp_RPT12_ATR_OVERALL_STATISTIC_GWYTEST @DTFROM,@DTTO,@ATRUNIT;