GO
USE [BHSDB];
GO

insert into PICTURES
select 'ReportLogo','Oklahoma Will Rogers World Airport','Logo Used On all reports for Oklahoma',
BulkColumn FROM OPENROWSET(Bulk 'D:\MIS\OKC_Logo.jpg', SINGLE_BLOB) AS BLOB;

--update PICTURES set PIC_TITLE='Charlotte Douglas International Airpot' where pic_name='Charlotte-ReportLogo'
--select * from PICTURES;

--SET USA date and time format

--Tuesday, December 17, 2013 6:00 AM
update SYS_CONFIG set SYS_VALUE='MM/dd/yyyy' where SYS_KEY='DEFAULT_DATE_FORMAT';
update SYS_CONFIG set SYS_VALUE='hh:mm:ss tt' where SYS_KEY='DEFAULT_TIME_FORMAT';

--SELECT * FROM SYS_CONFIG;
--select * from MIS_DATE_BASIC;

GO
USE [BHSDB];
GO

/****** Object:  Table [dbo].[MIS_DATE_BASIC]    Script Date: 19-Dec-13 5:59:06 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MIS_DATE_BASIC](
	[DATE_BASIC_VALUE] [varchar](20) NOT NULL,
	[DATE_BASIC_LABEL] [varchar](20) NULL,
	[IS_DEFAULT] [bit] NULL,
 CONSTRAINT [PK_MIS_DATE_BASIC] PRIMARY KEY CLUSTERED 
(
	[DATE_BASIC_VALUE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
INSERT [dbo].[MIS_DATE_BASIC] ([DATE_BASIC_VALUE], [DATE_BASIC_LABEL], [IS_DEFAULT]) VALUES (N'15MINUTES', N'15 MINUTES', 0)
GO
INSERT [dbo].[MIS_DATE_BASIC] ([DATE_BASIC_VALUE], [DATE_BASIC_LABEL], [IS_DEFAULT]) VALUES (N'1DAY', N'1 DAY', 1)
GO
INSERT [dbo].[MIS_DATE_BASIC] ([DATE_BASIC_VALUE], [DATE_BASIC_LABEL], [IS_DEFAULT]) VALUES (N'1HOUR', N'1 HOUR', 0)
GO
INSERT [dbo].[MIS_DATE_BASIC] ([DATE_BASIC_VALUE], [DATE_BASIC_LABEL], [IS_DEFAULT]) VALUES (N'1MONTH', N'1 MONTH', 0)
GO
INSERT [dbo].[MIS_DATE_BASIC] ([DATE_BASIC_VALUE], [DATE_BASIC_LABEL], [IS_DEFAULT]) VALUES (N'1WEEK', N'1 WEEK', 0)
GO
INSERT [dbo].[MIS_DATE_BASIC] ([DATE_BASIC_VALUE], [DATE_BASIC_LABEL], [IS_DEFAULT]) VALUES (N'1YEAR', N'1 YEAR', 0)
GO

--USE STD TO FIND AIRLINE
SELECT DISTINCT AIRLINE
FROM FLIGHT_PLAN_SORTING FPS
WHERE CONVERT(datetime,CONVERT(VARCHAR,FPS.SDO,103)+' '+DBO.RPT_GETFORMATTEDSTO(FPS.STO),103) BETWEEN @DTFROM AND @DTTO

SELECT DISTINCT FPS.FLIGHT_NUMBER
FROM FLIGHT_PLAN_SORTING FPS
WHERE CONVERT(datetime,CONVERT(VARCHAR,FPS.SDO,103)+' '+DBO.RPT_GETFORMATTEDSTO(FPS.STO),103) BETWEEN @DTFROM AND @DTTO
AND FPS.AIRLINE IN (@Airline) 

--USE SDO TO FIND RECENT 3 DAYS
SELECT DISTINCT(AIRLINE)
FROM FLIGHT_PLAN_SORTING 
WHERE SDO BETWEEN CONVERT(VARCHAR(10), DATEADD(DAY,-1,GETDATE()),111) 
AND  CONVERT(VARCHAR(10), DATEADD(DAY,1,GETDATE()),111) 

SELECT DISTINCT FPS.FLIGHT_NUMBER
FROM FLIGHT_PLAN_SORTING FPS
WHERE  SDO BETWEEN CONVERT(VARCHAR(10), DATEADD(DAY,-1,GETDATE()),111) 
AND  CONVERT(VARCHAR(10), DATEADD(DAY,1,GETDATE()),111) 
AND FPS.AIRLINE IN (@Airline) 

--@AIRLINE
SELECT DISTINCT(AIRLINE)
FROM FLIGHT_PLAN_SORTING 
WHERE (SDO BETWEEN CONVERT(VARCHAR(10), @DTFrom,111) 
AND  CONVERT(VARCHAR(10), @DTTo,111)) 
--AND AIRLINE IN (SELECT * FROM DBO.RPT_GETAIRLINE(@UserID))

--@FLIGHT_NUMBER
SELECT DISTINCT(FLIGHT_NUMBER) AS 'FLIGHTNUMBER' 
FROM FLIGHT_PLAN_SORTING 
WHERE AIRLINE IN (@Airline) 
AND (SDO BETWEEN CONVERT(VARCHAR(10), @DTFrom,111) 
AND  CONVERT(VARCHAR(10), @DTTo,111))



TRUNCATE TABLE APP_LIVE_MONITORING
INSERT INTO APP_LIVE_MONITORING VALUES('SACCOM01-SERVICES',GETDATE(),'UP','SAC Engin Service in SACCOM01');
INSERT INTO APP_LIVE_MONITORING VALUES('SACCOM02-SERVICES',GETDATE(),'UP','SAC Engin Service in SACCOM02');
INSERT INTO APP_LIVE_MONITORING VALUES('SACCOM01-BHSDB',GETDATE(),'UP','SQL Server Database in SACCOM01');
INSERT INTO APP_LIVE_MONITORING VALUES('SACCOM02-BHSDB',GETDATE(),'UP','SQL Server Database in SACCOM02');
INSERT INTO APP_LIVE_MONITORING VALUES('MES01-APP',GETDATE(),'UP','The MES Application in MES01');
INSERT INTO APP_LIVE_MONITORING VALUES('DCNMDS01-MDS',GETDATE(),'UP','The MDS System in DCNMDS01');
INSERT INTO APP_LIVE_MONITORING VALUES('DCNMDS02-MDS',GETDATE(),'UP','The MDS System in DCNMDS02');
INSERT INTO APP_LIVE_MONITORING VALUES('CR-MDSOWS1-DA',GETDATE(),'UP','The DA System in CR-MDSOWS1');
INSERT INTO APP_LIVE_MONITORING VALUES('CR-MDSOWS2-DA',GETDATE(),'UP','The DA System in CR-MDSOWS2');

GO
USE [BHSDB];
GO
drop table EDS_SN2LOCATION_MAP;
CREATE TABLE MIS_EDS_SN2LOCATION_MAP
(
	LOCATION varchar(20),
	EDS_SN varchar(50)
);

INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED1-13','EDS01-S########');
INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED2-12','EDS02-S########');
INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED3-11','EDS03-S########');
INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED4-11','EDS04-S########');

INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED7-11','EDS07-S########');
INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED8-11','EDS04-S########');
INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED9-11','EDS09-S########');
INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED10-11','EDS10-S########');
INSERT INTO MIS_EDS_SN2LOCATION_MAP VALUES('ED11-11','EDS11-S########');

GO
USE [BHSDB];
GO
drop table CBRA_ETD#2LOCATION_MAP;
CREATE TABLE MIS_CBRA_ETD#2LOCATION_MAP
(
	LOCATION VARCHAR(20),
	ETD_STATION_NUM varchar(50)
);

INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB1-6','WCBRA01-ETD01');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB1-7','WCBRA01-ETD02');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB1-9','WCBRA01-ETD03');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB1-10','WCBRA01-ETD04');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB1-12','WCBRA01-ETD05');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB1-13','WCBRA01-ETD06');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB1-15','WCBRA01-ETD07');

INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-5','ECBRA03-ETD01');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-6','ECBRA03-ETD02');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-8','ECBRA03-ETD03');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-9','ECBRA03-ETD04');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-11','ECBRA03-ETD05');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-12','ECBRA03-ETD06');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-14','ECBRA03-ETD07');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-15','ECBRA03-ETD08');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-17','ECBRA03-ETD09');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB3-18','ECBRA03-ETD10');

INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB4-5','ECBRA04-ETD01');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB4-6','ECBRA04-ETD02');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB4-8','ECBRA04-ETD03');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB4-9','ECBRA04-ETD04');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB4-11','ECBRA04-ETD05');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB4-12','ECBRA04-ETD06');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB4-14','ECBRA04-ETD07');
INSERT INTO MIS_CBRA_ETD#2LOCATION_MAP VALUES('SB4-15','ECBRA04-ETD08');

GO
USE [BHSDB];
GO
drop table IFS_INDIVIDUAL_FLIGHT_DETAIL
CREATE TABLE MIS_IFS_INDIVIDUAL_FLIGHT_DETAIL
(
	LICENSE_PLATE VARCHAR(10),
	PAX_NAME VARCHAR(200),
	BSM_TIME_STAMP DATETIME,
	TAG_READ_TIME DATETIME,
	SORTED_TIMESTAMP DATETIME
)

GO

/****** Object:  UserDefinedFunction [dbo].[GET_RPT_POST_XM]    Script Date: 10/07/2009 11:38:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

GO
USE [BHSDB];
GO

DROP FUNCTION [dbo].[GET_RPT_EDS_LINE_DEVICE];

ALTER FUNCTION [dbo].[GET_RPT_EDS_LINE_DEVICE]--[GET_RPT_POST_XM]
(
)
RETURNS 
@POST_XM_TABLE  TABLE 
(
	-- Add the column definitions for the TABLE variable here
	XRAY_ID  VARCHAR(20),			--EDS ID
	DIVERT_LOCATION VARCHAR(20),	--DIVERTER M
	DIVERT_RJT_LOC	VARCHAR(20),	--DIVERTER B
	DIVERT_CLT_LOC	VARCHAR(20),	--DIVERTER T

	REJECT_LOCATION VARCHAR (20),	--ITEM_PROCEED ALARM
	REJECT_LOCATION_TO VARCHAR(20), --ITEM_PROCEED PROCEED_LOCATION ALARM

	CLEAR_LOCATION VARCHAR (20),	--ITEM_PROCEED CLEAR
	CLEAR_LOCATION_TO VARCHAR(20), --ITEM_PROCEED PROCEED_LOCATION ALARM

	PRE_XM_LOCATION VARCHAR (20),	--ITEM_TRACKING BEFORE EDS
	EDS_LOCATION VARCHAR(20),
	POST_XM_LOCATION VARCHAR (20),	--ITEM_TRACKING AFTER EDS
	SUBSYSTEM VARCHAR(20)			--EDS LINE SUBSYSTEM NAME
)
AS
BEGIN

	--Need update
	INSERT INTO @POST_XM_TABLE VALUES('XR-SS1', 'SS1-14M', 'SS1-14B', 'SS1-14T', 'SS1-14B', 'OSR1-1', 'CL1-1', 'CL1-2','SS1-ENT','SS1-SCN', 'SS1-EXT','SS1');
	INSERT INTO @POST_XM_TABLE VALUES('XR-SS2', 'SS2-14M', 'SS2-14B', 'SS2-14T', 'SS2-14B', 'OSR2-1', 'CL2-1', 'CL2-2','SS2-ENT','SS2-SCN', 'SS2-EXT','SS2');
	INSERT INTO @POST_XM_TABLE VALUES('XR-SS3', 'SS3-16M', 'SS3-16B', 'SS3-16T', 'SS3-16B', 'OSR3-1', 'CL3-1', 'CL3-2','SS3-ENT','SS3-SCN', 'SS3-EXT','SS3');
	RETURN 
END

GO

GO
USE [BHSDB];
GO
drop table MIS_SS_LINE_DEVICE;
--Create a table used to map between BMA location and GID location on the same lines
CREATE TABLE MIS_TC_LINE_DEVICE --GID_BMA_MAP 
(
	SUBSYSTEM VARCHAR(20),		--SUBSYSTEM 
	GID_LOCATION VARCHAR(20),	--First GID generated location
	--ATR_LOCATION  VARCHAR(20),	--ATR LOCATION
	BMA_LOCATION VARCHAR(20)	--BMA LOCATION
);

insert into MIS_TC_LINE_DEVICE values('TC1','TC1-27','TC1-28-M1');--?
insert into MIS_TC_LINE_DEVICE values('TC7','TC7-21','TC7-21');--?


GO
USE [BHSDB];
GO
drop table MIS_MAINLINE_DEVICE;
--Create a table used to map between BMA location and GID location on the same lines
CREATE TABLE MIS_MAINLINE_DEVICE --GID_BMA_MAP 
(
	SUBSYSTEM VARCHAR(20),		--SUBSYSTEM 
	GID_LOCATION VARCHAR(20),	--MAINLINE GID LOCATION
	ATR_LOCATION  VARCHAR(20),	--MAINLINE ATR LOCATION
	IPR_TOMES_SUBSYSTEM VARCHAR(20)
);

insert into MIS_MAINLINE_DEVICE values('ML1','ML1-1','ML1-2','ME1');


GO
USE [BHSDB];
GO
drop table MIS_CBRA_CLEARLINE_DEVICE;
--Create a table used to map between BMA location and GID location on the same lines
CREATE TABLE MIS_CBRA_CLEARLINE_DEVICE --GID_BMA_MAP 
(
	CBRA_ID VARCHAR(20),		--THE SUBSYSTEM NAME FOR EACH CBRA AREA
	CLEARLINE_ID VARCHAR(20),	--THE SUBSYSTEM NAME FOR CLEAR LINE OF EACH CBRA AREA
);

insert into MIS_CBRA_CLEARLINE_DEVICE values('AL1','CL4');



GO
USE [BHSDB];
GO
drop table MIS_SubsystemCatalog;
CREATE TABLE MIS_SubsystemCatalog
(
	SUBSYSTEM_TYPE VARCHAR(30),
	SUBSYSTEM VARCHAR(20),
	DETECT_LOCATION VARCHAR(20),
	MDS_DATA INT,
	CONSTRAINT [PK_SC] PRIMARY KEY (SUBSYSTEM_TYPE,DETECT_LOCATION)
)
--INSERT INTO MIS_SubsystemCatalog VALUES('','','','');
INSERT INTO MIS_SubsystemCatalog VALUES('OG','OG1','OG1-2',0);
INSERT INTO MIS_SubsystemCatalog VALUES('EDS','SS1','SS1-ENT',0);
INSERT INTO MIS_SubsystemCatalog VALUES('EDS','SS2','SS2-ENT',0);
INSERT INTO MIS_SubsystemCatalog VALUES('EDS','SS3','SS3-ENT',0);

INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','TC1','TC1-5',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','TC2','TC2-4',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','TC3','TC3-4',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','TC4','TC4-4',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','TC5','TC5-4',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','TC6','TC6-4',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','TC7','TC7-7',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','CL4','CL4-4',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Input Conveyors','RI1','RI1-6',0);

INSERT INTO MIS_SubsystemCatalog VALUES('Mainline','ML1','ML1-5',0);

INSERT INTO MIS_SubsystemCatalog VALUES('Mainline Input','ML1','ML1-1',0);

INSERT INTO MIS_SubsystemCatalog VALUES('MES','MES','MES',0);

INSERT INTO MIS_SubsystemCatalog VALUES('MAKE-UP','MU','MU1',0);
INSERT INTO MIS_SubsystemCatalog VALUES('MAKE-UP','MU','MU2',0);
INSERT INTO MIS_SubsystemCatalog VALUES('MAKE-UP','MU','MU3',0);
INSERT INTO MIS_SubsystemCatalog VALUES('MAKE-UP','MU','MU4',0);
INSERT INTO MIS_SubsystemCatalog VALUES('MAKE-UP','MU','MU5',0);
INSERT INTO MIS_SubsystemCatalog VALUES('MAKE-UP','MU','MU6',0);
INSERT INTO MIS_SubsystemCatalog VALUES('MAKE-UP','MU','MU7',0);
INSERT INTO MIS_SubsystemCatalog VALUES('Run-out','SP1','SP1-1',0);

--INSERT INTO MIS_SubsystemCatalog VALUES('ATR','ML1','ML1-1',0);

GO
USE [BHSDB];
GO
drop table SUBSYSTEM_COUNT;
CREATE TABLE SUBSYSTEM_COUNT
(
	SUBSYSTEM VARCHAR(20),
	DETECT_LOCATION VARCHAR(20),
	CONSTRAINT [PK_SYSCNT] PRIMARY KEY (SUBSYSTEM,DETECT_LOCATION)
)

INSERT INTO SUBSYSTEM_COUNT VALUES('AL1','AL1-1');
INSERT INTO SUBSYSTEM_COUNT VALUES('CL1','CL1-1');
INSERT INTO SUBSYSTEM_COUNT VALUES('CL2','CL2-1');
INSERT INTO SUBSYSTEM_COUNT VALUES('CL3','CL3-1');
INSERT INTO SUBSYSTEM_COUNT VALUES('CL4','CL4-4');
INSERT INTO SUBSYSTEM_COUNT VALUES('CL5','CL5-1');
INSERT INTO SUBSYSTEM_COUNT VALUES('ME1','ME1-10');
INSERT INTO SUBSYSTEM_COUNT VALUES('ML1','ML1-5');
INSERT INTO SUBSYSTEM_COUNT VALUES('OG1','OG1-11');
INSERT INTO SUBSYSTEM_COUNT VALUES('OSR1','OSR1-1');
INSERT INTO SUBSYSTEM_COUNT VALUES('OSR2','OSR2-1');
INSERT INTO SUBSYSTEM_COUNT VALUES('OSR3','OSR3-1');
INSERT INTO SUBSYSTEM_COUNT VALUES('SS1','SS1-8');
INSERT INTO SUBSYSTEM_COUNT VALUES('SS2','SS2-8');
INSERT INTO SUBSYSTEM_COUNT VALUES('SS3','SS3-10');
INSERT INTO SUBSYSTEM_COUNT VALUES('TC1','TC1-27');
INSERT INTO SUBSYSTEM_COUNT VALUES('TC2','TC2-2');
INSERT INTO SUBSYSTEM_COUNT VALUES('TC3','TC3-3');
INSERT INTO SUBSYSTEM_COUNT VALUES('TC4','TC4-3');
INSERT INTO SUBSYSTEM_COUNT VALUES('TC5','TC5-4');
INSERT INTO SUBSYSTEM_COUNT VALUES('TC6','TC6-4');
INSERT INTO SUBSYSTEM_COUNT VALUES('TC7','TC7-21');


GO
USE [BHSDB_OKC];
GO
DROP TABLE MIS_DEVICE_PLC_MAP;
CREATE TABLE MIS_DEVICE_PLC_MAP
(
	EQUIP_SUBSYSTEM VARCHAR(20),
	PLC_ID VARCHAR(20),
	PLC_OTHERNAME VARCHAR(20)
)

INSERT INTO MIS_DEVICE_PLC_MAP VALUES('SS1','PLC03','PLC03');
INSERT INTO MIS_DEVICE_PLC_MAP VALUES('SS2','PLC03','PLC03');
INSERT INTO MIS_DEVICE_PLC_MAP VALUES('SS3','PLC03','PLC03');

GO
USE [BHSDB_OKC];
GO
DROP TABLE MIS_HSPD_DEVICE;
CREATE TABLE MIS_HSPD_DEVICE
(
	SUBSYSTEM VARCHAR(20),
	HSPD_MOTOR VARCHAR(20),
	BELT_LOCATION VARCHAR(20),
	RETRACT_CONVEYOR VARCHAR(20),
	EXTEND_CONVEYOR VARCHAR(20),
	ESTOP_LOCATIONS VARCHAR(MAX)
)

INSERT INTO MIS_HSPD_DEVICE VALUES('ME1','ME1-1','ME1-1A','ML1-4','ME1-2','CS-ME1-1-ES,CS-ME1-2-ES,CS-CL4-7-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('OG1','OG1-1','OG1-1A','TC7-25','OG1-2','CS-OG1-1-ES,CS-SS3-1-ES,CS-TC7-25-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('SS3','SS3-1','SS3-1A','TC7-25','SS3-2','CS-OG1-1-ES,CS-SS3-1-ES,CS-TC7-25-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('XO1','XO1-1','XO1-1A','TC1-29','XO1-2','CS-TC1-29-ES,CS-XO1-2-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('XO2','XO2-1','XO2-1A','TC7-23','XO2-2','CS-TC7-23-ES,CS-XO2-1-ES,CS-XO2-5-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('MU1','MU1-1','MU1-1A','ML1-6','MU1','CS-ML1-7-ES,CS-ME1-16-ES,CS-MU1-01-ES,CS-MU1-1-ES,CS-MU1-2-ES,CS-MU1-3-ES,CS-MU1-4-ES,CS-MU1-5-ES,CS-MU1-6-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('MU2','MU2-1','MU2-1A','ML1-10','MU2','CS-ML1-9-ES,CS-ML1-11-ES,CS-MU2-01-ES,CS-MU2-1-ES,CS-MU2-2-ES,CS-MU2-3-ES,CS-MU2-4-ES,CS-MU2-5-ES,CS-MU2-6-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('MU3','MU3-1','MU3-1A','ML1-12','MU3','CS-ML1-15-ES,CS-MU3-01-ES,CS-MU3-1-ES,CS-MU3-2-ES,CS-MU3-3-ES,CS-MU3-4-ES,CS-MU3-5-ES,CS-MU3-6-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('MU4','MU4-1','MU4-1A','ML1-19','MU4','CS-ML1-20-ES,CS-MU4-01-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('MU5','MU5-1','MU5-1A','ML1-24','MU5','CS-MU5-01-ES,CS-MU5-1-ES,CS-MU5-2-ES,CS-MU5-3-ES,CS-MU5-4-ES,CS-MU5-5-ES,CS-MU5-6-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('MU6','MU6-1','MU6-1A','ML1-25','MU6','CS-MU6-01-ES,CS-MU6-1-ES,CS-MU6-2-ES,CS-MU6-3-ES,CS-MU6-4-ES,CS-MU6-5-ES,CS-MU6-6-ES');
INSERT INTO MIS_HSPD_DEVICE VALUES('MU7','MU7-1','MU7-1A','ML1-26','MU7','CS-ML1-26-ES,CS-SP1-4-1-ES,EL-SP1-4-2-ES,CS-MU7-01-ES,CS-MU7-1-ES,CS-MU7-2-ES,CS-MU7-3-ES,CS-MU7-4-ES,CS-MU7-5-ES,CS-MU7-6-ES');

INSERT INTO REPORT_FAULT VALUES('AA_REFL','HSPD Fail Home','ALARM',1,1,1,GETDATE(),NULL)
INSERT INTO REPORT_FAULT VALUES('AA_EXFL','HSPD Fail Extended','ALARM',1,1,1,GETDATE(),NULL)

GO
USE [BHSDB];
GO

DROP TABLE MIS_EQUIP_STATUS_CLASS
CREATE TABLE MIS_EQUIP_STATUS_CLASS
(
	STATUS_CLASS VARCHAR(20),
	TAGNAME NVARCHAR(255),
	DESCRIPTION VARCHAR(200),
	DATATYPE VARCHAR(20),
	CONSTRAINT [PK_ESC_STATUSCLASS] PRIMARY KEY (STATUS_CLASS),
	CONSTRAINT [FK_ESC_TAGNAME] FOREIGN KEY (TAGNAME) REFERENCES MDS_TAG_IDX(TAGNAME),
)

DROP TABLE MIS_EQUIP_STATUS_VALUEMAP
CREATE TABLE MIS_EQUIP_STATUS_VALUEMAP
(
	STATUS_CLASS VARCHAR(20),
	STATUS_VALUE FLOAT,
	STATUS_NAME VARCHAR(30),
	CONSTRAINT [PK_ESV_STATUSCLASS] PRIMARY KEY (STATUS_CLASS,STATUS_VALUE)
);

drop table MIS_EQUIP_LIVE_MONITOR;
CREATE TABLE MIS_EQUIP_LIVE_MONITOR
(
	SUBSYSTEM VARCHAR(20),
	EQUIP_ID VARCHAR(20),
	STATUS_CLASS VARCHAR(20),
	UPDATE_TIME_STAMP DATETIME,
	CURRENT_STATUS VARCHAR(30),
	CONSTRAINT [PK_ELM_STATUS] PRIMARY KEY (EQUIP_ID,STATUS_CLASS),
	--CONSTRAINT [FK_ELM_STATUS_CLASS] FOREIGN KEY (STATUS_CLASS) REFERENCES MIS_EQUIP_STATUS_CLASS(STATUS_CLASS),
	--CONSTRAINT [FK_ELM_CRRSTATUS] FOREIGN KEY (CURRENT_STATUS) REFERENCES MIS_EQUIP_STATUS_VALUEMAP(STATUS_NAME)
);

USE [BHSDB]
GO

/****** Object:  Table [dbo].[MIS_STATUS_EDS]    Script Date: 2014/1/5 14:44:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[MIS_STATUS_EDS](
	[EDS_NAME] [varchar](50) NULL,
	[SW_TYPE] [varchar](50) NULL,
	[SW_REV] [varchar](50) NULL,
	[KEY_POS] [varchar](50) NULL,
	[EDS_STATUS] [varchar](20) NULL,
	[PLC_SCAN_TIME] [int] NULL,
	[ESTOP] [int] NULL,
	[FAULTS] [int] NULL,
	[RTR_HIGH] [int] NULL,
	[RTR_LOW] [int] NULL,
	[JAMS] [int] NULL,
	[BAGS_SCR] [int] NULL,
	[BAGS_CLR] [int] NULL,
	[BAGS_ALM] [int] NULL,
	[BAGS_EDS_UNKNOWN] [int] NULL,
	[BAGS_SEEN] [int] NULL,
	[BAGS_BHS_UNKNOWN] [int] NULL,
	[BAGS_BHS_UNKNOWN_PER] [float] NULL,
	[TIMEOUTS] [int] NULL,
	[AVG_L2_DECISION_TIME] [float] NULL,
	[AVG_BAG_PROC_TIME] [float] NULL,
	[COMM_IF_STATUS] [int] NULL,
	[COMM_PLC_NAME] [varchar](30) NULL
) ON [PRIMARY]

CREATE TABLE [dbo].[MIS_STATUS_PLC](
	[PLC_NAME] [varchar](50) NULL,
	[SW_TYPE] [varchar](50) NULL,
	[SW_REV] [varchar](50) NULL,
	[KEY_POS] [varchar](30) NULL,
	[PLC_STATUS] [varchar](30) NULL,
	[LED_CPU] [varchar](3) NULL,
	[LED_FORCE] [varchar](3) NULL,
	[LED_COMM] [varchar](3) NULL,
	[LED_BATT] [varchar](3) NULL,
	[MEM_SIZE] [int] NULL,
	[MEM_USED] [int] NULL,
	[MEM_CMPL] [int] NULL,
	[RUN_CNT] [int] NULL,
	[SCAN_TIME] [int] NULL,
	[CPU_ERR] [int] NULL,
	[NWK_ERR] [int] NULL
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO

SELECT DISTINCT ALM_ALMAREA1 AS SUBSYSTEM,ALM_ALMEXTFLD2 AS LOCATION
INTO MDS_LOCATIONS_GWY
FROM MDS_ALARMS

SELECT DISTINCT SUBSYSTEM 
FROM(
	SELECT SUBSYSTEM 
	FROM  SUBSYSTEMS
	UNION
	SELECT SUBSYSTEM
	FROM MDS_LOCATIONS_GWY
	) AS ALL_LOCATIONS


SELECT DISTINCT LOCATION
FROM(
	SELECT   DBO.RPT_FORMAT_LOCATION(LOCATION) AS LOCATION
	FROM    LOCATIONS
	WHERE   (SUBSYSTEM IN (@Subsystem))
	UNION ALL
	SELECT LOCATION
	FROM MDS_LOCATIONS_GWY
	WHERE (SUBSYSTEM IN (@Subsystem))
	) AS ALL_LOCATIONS
ORDER BY LOCATION

SELECT DISTINCT SUBSYSTEM
FROM (
		SELECT SUBSYSTEM FROM SUBSYSTEMS
		UNION ALL
		SELECT SUBSYSTEM FROM MDS_BAG_COUNTERS
	  ) AS ALL_SUBSYSTEM